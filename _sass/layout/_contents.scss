@charset "utf-8";

/**======================================
	contents

		// must-- 必須編集箇所
		// edit-- 編集箇所
======================================**/

/*--------------------------------------
	area > box > part
---------------------------------------*/

/* area > box > part */

// edit--
.area {
	padding: 30px 0;
	@include mq(tb_) {
		padding: 60px 0;
	}
	@include mq(pc_) {
		padding: 80px 0;
	}
}
.box:not(:last-child) {
	margin-bottom: 30px;
	@include mq(tb_) {
		margin-bottom: 50px;
	}
	@include mq(pc_) {
		margin-bottom: 60px;
	}
}
.part:not(:last-child) {
	margin-bottom: 20px;
	@include mq(tb_) {
		margin-bottom: 30px;
	}
	@include mq(pc_) {
		margin-bottom: 40px;
	}
}
.cont:not(:last-child) {
	margin-bottom: 15px;
	@include mq(tb_) {
		margin-bottom: 20px;
	}
	@include mq(pc_) {
		margin-bottom: 20px;
	}
	> *:last-child {
		margin-bottom: 0;
	}
}
// --edit
.area {
	> .box {
		@include cont_in_wrap;
	}
	> .box.full {
		width: 100%;
		max-width: none;
		> * {
			@include mq(_tb) {
				margin-right: auto;
				margin-left: auto;
				width: 90%;
			}
		}
	}
}
.area.side_area {
	@include mq(_tb) {
		padding-right: 5%;
		padding-left: 5%;
	}
}
.area:not(.side_area):not(.main_area) {
	> * {
		@include mq(pc_) {
			max-width: $max_pc_width;
		}
	}
	.narrow_pc {
		@include mq(pc_) {
			margin-right: auto;
			margin-left: auto;
			max-width: $narrow_pc_width;
		}
	}
	.compact_pc {
		@include mq(pc_) {
			margin-right: auto;
			margin-left: auto;
			max-width: $compact_pc_width;
		}
	}
	> .wide_pc {
		@include mq(pc_) {
			max-width: $max_pc_width;
		}
	}
}

/* main_side */

@include mq(pc_) {
	.contents.main_side {
		display: grid;
		grid-template-rows: repeat(8, min-content);
		grid-template-columns: 70% 1fr 25%;
		margin-bottom: 40px;
		@include cont_in_wrap;
		.area.main_area:not(:last-child) {
			padding-bottom: 0;
		}
		.area.main_area {
			grid-row: auto;
			grid-column: 1;
			> .hgroup,
			> .cgroup,
			> *[class^='heading'],
			> .box {
				padding-right: 0;
				padding-left: 0;
				width: 100%;
			}
		}
		.main_area:nth-child(1) {
			grid-row: 1;
		}
		.main_area:nth-child(2) {
			grid-row: 2;
		}
		.main_area:nth-child(3) {
			grid-row: 3;
		}
		.main_area:nth-child(4) {
			grid-row: 4;
		}
		.main_area:nth-child(5) {
			grid-row: 5;
		}
		.main_area:nth-child(6) {
			grid-row: 6;
		}
		.main_area:nth-child(7) {
			grid-row: 7;
		}
		.main_area:nth-child(8) {
			grid-row: 7;
		}
		.area.side_area {
			grid-row: 1 / -1;
			grid-column: 3;
			padding-top: 80px;
			> *[class^='heading'],
			> .box {
				padding-right: 0;
				padding-left: 0;
			}
		}
	}
	.contents:not(.main_side) {
		.area.side_area {
			> * {
				@include cont_in_wrap;
			}
		}
	}
}

/*--------------------------------------
	title
---------------------------------------*/

.title_wrap {
	position: relative;
	z-index: 3;
	// must--
	background: #222;
	// --must
	.title {
		@include cont_in_wrap;
		// edit--
		padding-top: 50px;
		padding-bottom: 50px;
		text-align: center;
		@include mq(tb_) {
			padding-top: 60px;
			padding-bottom: 60px;
		}
		@include mq(pc_) {
			padding-top: 80px;
			padding-bottom: 80px;
		}
		.title_text {
			font-size: 2.2rem;
			line-height: 1.3;
			color: white;
			@include mq(tb_) {
				font-size: 3.2rem;
			}
		}
		.title_text_sub {
			font-size: 1.2rem;
			color: white;
			@include mq(tb_) {
				font-size: 1.6rem;
			}
		}
		// --edit
	}
}

/*--------------------------------------
	heading catch
---------------------------------------*/

.hgroup,
.cgroup {
	margin-bottom: 20px;
	@include mq(tb_) {
		margin-right: 0;
		margin-bottom: 40px;
		margin-left: 0;
	}
	@include mq(pc_) {
		margin-bottom: 60px;
	}
	@include mq(_sp) {
		// edit--
		// hgroup に背景をつける場合 pt pb > 0 にする
		// --edit
	}
	> *:last-child {
		margin-bottom: 0;
	}
	.heading02 {
		margin-bottom: 0;
	}
}
.area > .hgroup,
.area > .cgroup {
	@include mq(tb_) {
		@include cont_in_wrap;
	}
}

.heading,
%heading {
	&02 {
		// edit--
		text-align: center;
		font-size: 2.4rem;
		line-height: 1.4;
		color: color(text, heading);
		@include mq(tb_) {
			font-size: 2.8rem;
			line-height: 1.4;
		}
		// --edit
	}
	.hgroup &02 {
		margin-bottom: 0;
	}
	&03 {
		margin-bottom: 15px;
		// must--
		padding-bottom: 5px;
		border-bottom: 2px solid color(border, base);
		font-size: 2rem;
		font-weight: bold;
		// --must
		line-height: 1.4;
		color: color(text, heading);
		@include mq(tb_) {
			margin-bottom: 25px;
			// must--
			padding-bottom: 10px;
			font-size: 2.2rem;
			font-weight: bold;
			// --must
			line-height: 1.4;
		}
	}
	&04 {
		margin-bottom: 10px;
		font-size: 1.8rem;
		line-height: 1.4;
		color: color(text, heading);
		@include mq(tb_) {
			margin-bottom: 20px;
			font-size: 2rem;
			line-height: 1.4;
		}
	}
	&05 {
		margin-bottom: 10px;
		font-weight: bold;
		line-height: 1.4;
		color: color(text, heading);
		@include mq(tb_) {
			margin-bottom: 15px;
			font-size: 1.5rem;
			line-height: 1.4;
		}
	}
}
.area > *[class^='heading'] {
	@include cont_in_wrap;
}

.catch {
	& {
		margin-bottom: 15px;
		// edit--
		font-size: 2.4rem;
		font-family: font(mincho);
		// --edit
		line-height: 1.6;
		color: color(text, heading);
		@include mq(tb_) {
			margin-bottom: 25px;
			// edit--
			font-size: 2.8rem;
			// --edit
			line-height: 1.8;
		}
	}
	&.center {
		text-align: center;
	}
	&.left {
		text-align: left;
	}
}

/*--------------------------------------
	inline -text
---------------------------------------*/

/* text, list */

.texts p,
p.text {
	margin-bottom: 10px;
	line-height: 1.8;
	a {
		word-break: break-all;
		word-wrap: break-word;
	}
}
// list
.texts ul,
.texts ol,
ul.text,
ol.text {
	margin-bottom: 10px;
	> li {
		position: relative;
		padding-left: 1.5em;
		line-height: 1.6;
		&::before {
			position: absolute;
			top: 0;
			left: 0.4em;
			display: block;
		}
		> ul,
		> ol {
			margin-top: 6px;
		}
	}
	li:not(:last-child) {
		margin-bottom: 4px;
	}
}
.texts ul,
ul.text {
	> li {
		//@include icomoon('block', icom(circle), 5px, 'left', 7px, color(list, base));
		&::before {
			content: icom(circle);
			left: 1px;
			text-align: center;
			font-size: inherit;
			font-family: font(icomoon);
			line-height: 1.7;
			color: color(list, base);
			transform: scale(0.5);
		}
	}
}
.texts ol,
ol.text {
	counter-reset: num 0;
	> li {
		counter-increment: num;
		&::before {
			content: counter(num) '. ';
			left: 0;
			width: 1.5em;
			color: color(list, base);
		}
		ol {
			counter-reset: childnum 0;
			li {
				counter-increment: childnum;
				&::before {
					content: counter(childnum) '. ';
					color: color(list, base);
				}
			}
		}
	}
}
ul.ul_arrow,
.texts ul.ul_arrow {
	> li {
		//@include icomoon('block', icom(angle-right-regular), 10px, 'left', 1px);
		&:before {
			content: icom(angle-right);
			width: 1em;
			transform: scale(0.8);
		}
	}
}
ul.ul_line,
.texts ul.ul_line {
	> li {
		&::before {
			content: '';
			top: 12px;
			width: 8px;
			height: 1px;
			background-color: #999;
		}
	}
}

ul.ul_title_col,
.texts ul.ul_title_col {
	> li:not(:last-child) {
		margin-bottom: 10px;
	}
	> li {
		position: relative;
		padding-left: 0;
		min-height: 1.6em;
		.title,
		&:before {
			position: static;
			top: auto;
			left: auto;
			display: block;
			border-radius: 0;
			width: auto;
			height: auto;
			background: none;
			text-align: left;
			font-size: inherit;
			font-weight: bold;
			font-family: font(base);
			line-height: inherit;
			color: color(text, heading);
			transform: none;
		}
		&:before {
			content: attr(title);
		}
	}
}

$ul_title_breaks: 'all', 'tb', 'pc';
@each $v in $ul_title_breaks {
	$mq: 'all';
	$class: '';
	@if $v != 'all' {
		$mq: '#{$v}_';
		$class: '_#{$v}';
	}
	%ul_title#{$class} {
		@extend ul.ul_title_col;
		> li:not(:last-child) {
			@include mq($mq) {
				margin-bottom: 4px;
			}
		}
		> li {
			.title,
			&:before {
				@include mq($mq) {
					position: absolute;
					top: 0;
					left: 0;
					display: inline-block;
					margin: auto;
					height: 100%;
				}
			}
		}
	}
}

$num: '';
@for $i from 3 through 6 {
	$num: $i + 1;
	@each $v in $ul_title_breaks {
		$mq: 'all';
		$class: '';
		@if $v != 'all' {
			$mq: '#{$v}_';
			$class: '_#{$v}';
		}
		ul.ul_title_#{$i}#{$class},
		.texts ul.ul_title_#{$i}#{$class} {
			@extend %ul_title#{$class};
			> li {
				@include mq($mq) {
					padding-left: #{$num + 0.5}em;
				}
				.title,
				&:before {
					@include mq($mq) {
						width: #{$num}em;
					}
				}
			}
		}
	}
}

// edit--
$ol_circle_size: 20px;
// --edit
ul.ol_circle,
.texts ol.ol_circle {
	> li {
		padding-left: $ol_circle_size + 8px;
		counter-increment: num;
		&::before,
		&::after {
			top: 12px - $ol_circle_size / 2;
			width: $ol_circle_size;
			height: $ol_circle_size;
		}
		&::before {
			content: counter(num);
			z-index: 3;
			text-align: center;
			font-size: 1.1rem;
			font-weight: bold;
			line-height: $ol_circle_size;
			color: white;
		}
		&::after {
			content: '';
			position: absolute;
			left: 0;
			z-index: 2;
			display: block;
			border-radius: 100%;
			background-color: color(list, base);
		}
	}
}
.circle_cf_ol {
	display: inline-block;
	width: $ol_circle_size;
	height: $ol_circle_size;
	background-color: color(list, base);
	text-align: center;
	font-size: 1.1rem;
	font-weight: bold;
	line-height: $ol_circle_size;
	color: white;
}
ul.ol_kome,
.texts ol.ol_kome {
	> li {
		padding-left: 40px;
		counter-increment: num;
		&::before {
			content: '* ' counter(num) ' ';
			width: 40px;
			font-weight: bold;
			color: color(list, base);
		}
	}
}
.texts dl,
dl.text {
	display: grid;
	grid-template: auto / min-content 1fr;
	margin-bottom: 10px;
	> dt {
		grid-column: 1;
		margin-right: 20px;
		margin-bottom: 4px;
		line-height: 1.6;
		color: color(list, base);
		color: color(list, base);
		white-space: nowrap;
	}
	> dd {
		grid-column: 2;
		margin-bottom: 4px;
		line-height: 1.6;
	}
}
// text : center right
// * sp tb pc で切り替える可能性がある場合など多用しない
.texts p.center,
p.text.center {
	text-align: center;
}
.texts p.right,
p.text.right {
	text-align: right;
}
.texts p.left,
p.text.left {
	text-align: left;
}
.texts p.big,
p.text.big {
	font-size: 1.6rem;
	line-height: 2;
}
.texts p.caption,
p.text.caption {
	font-size: 1.3rem;
	line-height: 1.3;
}
.texts p.supple,
p.text.supple {
	font-size: 1.3rem;
	line-height: 1.5;
}

/* util style */

.caption {
	font-size: 1.3rem;
}
.supple {
	font-size: 1.2rem;
}
.caution {
	color: #c00;
}
.accent {
	color: #f66;
}
.marker {
	background: linear-gradient(transparent 75%, rgba(yellow, 0.9) 25%);
}
.icon_kome {
	position: relative;
	padding-left: 20px;
	list-style: none;
	&::before {
		content: '※';
		position: absolute;
		top: 0;
		left: 0;
		display: block;
		width: 15px;
	}
	&.center {
		display: inline-block;
	}
}
// tag
strong,
.bold {
	font-weight: bold;
}
// fuchidori text（袋文字）
.fuchidori_text {
	@include fuchidori_text(blue, 2px);
}
.nobr {
	display: inline-block;
}

/* text link */

.link_arrow {
	padding-left: 1.5em;
	@include icomoon('block', icom(angle-right-regular), 10px, 'left', 1px);
}
.link_external {
	&::after {
		content: icom(external-link-regular);
		margin-left: 5px;
		font-size: 1.1rem;
		font-family: font(icomoon);
	}
}
.link_sscroll {
	&::after {
		content: icom(angle-double-down-regular);
		margin-left: 5px;
		font-size: 1.2rem;
		font-family: font(icomoon);
	}
}
.link_parent {
	&::after {
		content: icom(angle-right-regular);
		margin-right: 8px;
		margin-left: 8px;
		font-size: 1.2rem;
		font-family: font(icomoon);
	}
}
.pdf_mark {
	margin: 0 15px;
	padding: 0 6px;
	background: #a00;
	font-size: 0.9rem;
	line-height: 1;
	color: white;
	@include mq(tb_) {
		margin: 0 10px;
		padding: 2px 4px;
	}
}

/*--------------------------------------
	inline -img
---------------------------------------*/

/* normal img */

.pic {
	text-align: center;
	& {
		img {
			width: auto;
			max-width: 100%;
			vertical-align: bottom;
		}
		a:hover {
			img {
				opacity: 0.75;
			}
		}
	}
	& + *:not(.pic):not(.texts_item) {
		margin-top: 8px;
	}
	/* util */
	&.max {
		img {
			width: 100%;
		}
	}
	&.frame {
		padding: 4px;
		border: 1px solid color(border, base);
	}
}

.object_fit {
	text-align: center;
	& {
		position: relative;
		display: block;
		margin-bottom: 8px;
		&::before {
			content: '';
			display: block;
			padding-top: 40%;
		}
		img {
			position: absolute;
			top: 0;
			right: 0;
			bottom: 0;
			left: 0;
			width: 100%;
			height: 100%;
			object-fit: cover;
		}
		img[src$='noimage_icon.svg'] {
			position: absolute;
			top: 0;
			left: 0;
			width: 100%;
			height: 100%;
			background-color: #eee !important;
			object-fit: none;
		}
	}
	& + *:not(.object_fit):not(.texts_item) {
		margin-top: 8px;
	}
	/* util */
	&.frame {
		padding: 4px;
		border: 1px solid color(border, base);
	}
}

/*--------------------------------------
	part > cont
---------------------------------------*/

/* cover_wrap */

.cover_wrap {
	position: relative;
	padding: 15px;
	// edit--
	border: 1px solid color(border, base);
	border-radius: radius(base);
	background: white;
	@include mq(tb_) {
		padding: 25px;
	}
	// --edit
	.heading_in_cover {
		@include icomoon('block', icom(pencil), 14px, 'left', 0, rgb(202, 178, 43));
		margin-bottom: 10px;
		padding-bottom: 5px;
		padding-left: 14px + 10px;
		border-bottom: 1px solid color(border, base);
		font-weight: bold;
		line-height: 1.8;
		&::before {
			transform: translateY(-14px / 2 - 5px / 2);
		}
	}
}

/* search_wrap */

form.search_wrap {
	display: flex;
	flex-wrap: wrap;
	align-items: center;
	justify-content: center;
	.input_wrap {
		margin-right: 10px;
		width: calc(100% - 50px);
		max-width: calc(100% - 50px);
		@include mq(tb_) {
			width: 400px;
		}
		input {
			margin: 0;
		}
	}
	a.button,
	button.button {
		padding: 0;
		width: 40px;
		min-width: auto;
		transition: all 0.3s;
		> * {
			padding: 0;
			width: 40px;
			height: 40px;
			color: transparent !important;
			cursor: pointer;
			transition: all 0.3s;
			@include icomoon('self', icom(search), 16px, '', '');
		}
	}
}

/* openclose */

.openclose_wrap {
	.openclose_handle,
	a.openclose_handle,
	a.openclose_handle:visited {
		color: color(text, base);
		@include mq(pc_) {
			cursor: pointer;
		}
		span {
			padding: 10px 0 10px 25px;
			transition: all 0.3s;
		}
	}
	.openclose_handle.plus {
		span {
			@include icomoon('block', icom(plus-circle), 18px, 'left', 0);
		}
	}
	.openclose_handle:hover {
		span {
			color: lighten(color(text, base), 40%);
			&::before {
				color: color(text, base);
			}
		}
	}
	.openclose_handle.minus {
		span {
			@include icomoon('block', icom(minus-circle), 18px, 'left', 0);
		}
	}
	.openclose_target {
		margin-bottom: 0; // スムーズな開閉
		padding: 15px 0;
		> *:last-child {
			margin-bottom: 0; // スムーズな開閉
		}
	}
}

/* tab */

.tab_wrap {
	border: 1px solid #333;
	border-radius: radius(base);
	.tab_handle_set {
		display: flex;
		flex-wrap: wrap;
		margin-bottom: 0 !important;
		width: 100%;
		> *,
		> a:visited {
			position: relative;
			flex-grow: 1;
			text-align: center;
			text-decoration: none;
			cursor: pointer;
			transition: all 0.5s;
			span {
				display: block;
				padding: 15px;
				border-bottom: 1px solid #333;
				width: 100%;
				background-color: color(button, base);
				color: white;
				transition: all 0.5s;
			}
		}
		> *.current {
			border-bottom: none;
			pointer-events: none;
			cursor: default;
			span {
				border-bottom: 1px solid white;
				background-color: white;
				color: #333;
			}
		}
		> *:first-child {
			span {
				border-top-left-radius: radius(base);
			}
		}
		> *:last-child {
			span {
				border-top-right-radius: radius(base);
			}
		}
		> *:not(:first-child) {
			border-left: 1px solid white;
		}
		> *:hover {
			span {
				background-color: rgba(color(button, base), 0.8);
			}
		}
	}
	.tab_target {
		margin-bottom: 0;
		padding: 15px;
		border-bottom-right-radius: radius(base);
		border-bottom-left-radius: radius(base);
		background-color: white;
	}
}

/* bottom_line */

.bottom_line {
	margin-bottom: 20px;
	padding-bottom: 20px;
	border-bottom: 1px solid color(border, base);
	@include mq(tb_) {
		margin-bottom: 30px;
		padding-bottom: 30px;
	}
}

/* flext_box */

// edit--
$clm_margin: (
	_sp: 10px,
	tb: 30px,
	pc_: 20px
);
// flext_box - image_texts*
$image_texts: (
	_sp: (
		image: 30%,
		texts: 65%,
		float: 30%
	),
	tb: (
		image: 30%,
		texts: 65%,
		float: 30%
	),
	pc_: (
		image: 40%,
		texts: 50%,
		float: 30%
	)
);
// snap
$snap_prop: (
	_sp: (
		wrapper: 90vw,
		width: 80vw,
		next_view_width: 3vw
	)
);
// --edit

@include mq(_sp) {
	// image_texts left_right float
	.image_texts,
	.image_texts_sp_tb,
	.image_texts_sp {
		display: flex;
		flex-wrap: wrap;
		justify-content: space-between;
		> .image_item {
			order: 1;
			margin-bottom: 0;
			width: image_texts(_sp, image);
		}
		> .texts_item {
			order: 2;
			margin-bottom: 0;
			width: image_texts(_sp, texts);
		}
	}
	.texts_image,
	.texts_image_sp_tb,
	.texts_image_sp {
		display: flex;
		flex-wrap: wrap;
		justify-content: space-between;
		> .image_item {
			order: 2;
			margin-bottom: 0;
			width: image_texts(_sp, image);
		}
		> .texts_item {
			order: 1;
			margin-bottom: 0;
			width: image_texts(_sp, texts);
		}
	}
	.left_right,
	.left_right_sp_tb,
	.left_right_sp {
		display: flex;
		flex-wrap: wrap;
		justify-content: space-between;
		> .left_item {
			order: 1;
			margin-bottom: 0;
			width: 47.5%;
		}
		> .right_item {
			order: 2;
			margin-bottom: 0;
			width: 47.5%;
		}
	}
	.float_left,
	.float_left_sp_tb,
	.float_left_sp {
		> .image_item {
			float: left;
			margin: 0 10px 10px 0;
			width: image_texts(_sp, float);
		}
	}
	.float_right,
	.float_right_sp_tb,
	.float_right_sp {
		> .image_item {
			float: right;
			margin: 0 0 10px 10px;
			width: image_texts(_sp, float);
		}
	}
	// clm*
	.clm2,
	.clm3,
	.clm4,
	.clm5,
	.clm2_sp_tb,
	.clm3_sp_tb,
	.clm4_sp_tb,
	.clm5_sp_tb,
	.clm2_sp,
	.clm3_sp,
	.clm4_sp,
	.clm5_sp {
		display: flex;
		flex-wrap: wrap;
		> .clm_item {
			margin-top: clm_margin(_sp);
			margin-right: clm_margin(_sp);
			margin-bottom: 0;
			#{headings()},
			.caption,
			.texts,
			.text {
				padding-right: 5px;
				padding-left: 5px;
			}
		}
	}
	.clm2,
	.clm2_sp_tb,
	.clm2_sp {
		> .clm_item {
			width: calc(50% - #{clm_margin(_sp) / 2});
		}
		> .clm_item:nth-of-type(2n) {
			margin-right: 0 !important;
		}
		> .clm_item:not(:nth-of-type(n + 3)) {
			margin-top: 0;
		}
	}
	.clm3,
	.clm3_sp_tb,
	.clm3_sp {
		> .clm_item {
			width: calc(33.3% - #{clm_margin(_sp) * 2 / 3});
		}
		> .clm_item:nth-of-type(3n) {
			margin-right: 0 !important;
		}
		> .clm_item:not(:nth-of-type(n + 4)) {
			margin-top: 0;
		}
	}
	.clm4,
	.clm4_sp_tb,
	.clm4_sp {
		> .clm_item {
			width: calc(25% - #{clm_margin(_sp) * 3 / 4});
		}
		> .clm_item:nth-of-type(4n) {
			margin-right: 0 !important;
		}
		> .clm_item:not(:nth-of-type(n + 5)) {
			margin-top: 0;
		}
	}
	.clm5,
	.clm5_sp_tb,
	.clm5_sp {
		> .clm_item {
			width: calc(20% - #{clm_margin(_sp) * 4 / 5});
		}
		> .clm_item:nth-of-type(5n) {
			margin-right: 0 !important;
		}
		> .clm_item:not(:nth-of-type(n + 6)) {
			margin-top: 0;
		}
	}
	/* heading in flex */
	.image_texts,
	.texts_image,
	.left_right,
	.clm2,
	.clm3,
	.clm4,
	.clm5,
	.image_texts_sp_tb,
	.texts_image_sp_tb,
	.left_right_sp_tb,
	.clm2_sp_tb,
	.clm3_sp_tb,
	.clm4_sp_tb,
	.clm5_sp_tb,
	.image_texts_sp,
	.texts_image_sp,
	.left_right_sp,
	.clm2_sp,
	.clm3_sp,
	.clm4_sp,
	.clm5_sp {
		> #{headings()}:first-child {
			width: 100%;
		}
	}
	.snap_sp {
		display: flex;
		margin-right: -5%;
		margin-left: -5%;
		width: 90vw;
		overflow-x: scroll;
		scroll-snap-type: x;
		> .clm_item {
			flex: none;
			margin-bottom: 0;
		}
		> .clm_item:first-child {
			padding-right: ((snap_prop(_sp, wrapper) - snap_prop(_sp, width)) / 2 - snap_prop(_sp, next_view_width)) / 2;
			padding-left: (snap_prop(_sp, wrapper) - snap_prop(_sp, width)) / 2;
			width: snap_prop(_sp, width) + ((snap_prop(_sp, wrapper) - snap_prop(_sp, width)) / 2 - snap_prop(_sp, next_view_width)) / 2 + (snap_prop(_sp, wrapper) - snap_prop(_sp, width)) / 2;
			scroll-snap-align: start;
		}
		> .clm_item:not(:first-child):not(:last-child) {
			padding-right: ((snap_prop(_sp, wrapper) - snap_prop(_sp, width)) / 2 - snap_prop(_sp, next_view_width)) / 2;
			padding-left: ((snap_prop(_sp, wrapper) - snap_prop(_sp, width)) / 2 - snap_prop(_sp, next_view_width)) / 2;
			width: snap_prop(_sp, width) + ((snap_prop(_sp, wrapper) - snap_prop(_sp, width)) / 2 - snap_prop(_sp, next_view_width));
			scroll-snap-align: center;
		}
		> .clm_item:last-child {
			padding-right: (snap_prop(_sp, wrapper) - snap_prop(_sp, width)) / 2;
			padding-left: ((snap_prop(_sp, wrapper) - snap_prop(_sp, width)) / 2 - snap_prop(_sp, next_view_width)) / 2;
			width: snap_prop(_sp, width) + ((snap_prop(_sp, wrapper) - snap_prop(_sp, width)) / 2 - snap_prop(_sp, next_view_width)) / 2 + (snap_prop(_sp, wrapper) - snap_prop(_sp, width)) / 2;
			scroll-snap-align: end;
		}
		> .clm_item {
			&::before,
			&::after {
				text-align: center;
				font-weight: 900;
			}
		}
	}
	// slick ( sp )
	// slickで出力されるcssのoverwrite
	.slick_sp.slick-initialized {
		margin-right: -5%;
		margin-bottom: 22px + 30px !important; // slick-dots の高さを加算
		margin-left: -5%;
		.clm_item {
			padding: 0 5px;
		}
		.slick-dots {
		}
	}
}

@include mq(tb) {
	// image_texts left_right float
	.image_texts,
	.image_texts_sp_tb,
	.image_texts_tb_pc,
	.image_texts_tb {
		display: flex;
		flex-wrap: wrap;
		justify-content: space-between;
		> .image_item {
			order: 1;
			margin-bottom: 0;
			width: image_texts(tb, image);
		}
		> .texts_item {
			order: 2;
			margin-bottom: 0;
			width: image_texts(tb, texts);
		}
	}
	.texts_image,
	.texts_image_sp_tb,
	.texts_image_tb_pc,
	.texts_image_tb {
		display: flex;
		flex-wrap: wrap;
		justify-content: space-between;
		> .image_item {
			order: 2;
			margin-bottom: 0;
			width: image_texts(tb, image);
		}
		> .texts_item {
			order: 1;
			margin-bottom: 0;
			width: image_texts(tb, texts);
		}
	}
	.image_texts_grid,
	.image_texts_grid_sp_tb,
	.image_texts_grid_tb_pc,
	.image_texts_grid_tb {
		display: grid;
		grid-template-rows: min-content 1fr;
		grid-template-columns: image_texts(tb, image) 1fr image_texts(tb, texts);
		> #{headings()} {
			grid-row: 1 / 2;
			grid-column: 3 / 4;
		}
		> .image_item {
			grid-row: 1 / 3;
			grid-column: 1 / 2;
			margin-bottom: 0;
		}
		> .texts_item {
			grid-row: 2 / 3;
			grid-column: 3 / 4;
			margin-bottom: 0;
		}
	}
	.texts_image_grid,
	.texts_image_grid_sp_tb,
	.texts_image_grid_tb_pc,
	.texts_image_grid_tb {
		display: grid;
		grid-template-rows: min-content 1fr;
		grid-template-columns: image_texts(tb, texts) 1fr image_texts(tb, image);
		> #{headings()} {
			grid-row: 1 / 2;
			grid-column: 1 / 2;
		}
		> .image_item {
			grid-row: 1 / 3;
			grid-column: 3 / 4;
			margin-bottom: 0;
		}
		> .texts_item {
			grid-row: 2 / 3;
			grid-column: 1 / 2;
			margin-bottom: 0;
		}
	}
	.left_right,
	.left_right_sp_tb,
	.left_right_tb_pc,
	.left_right_tb {
		display: flex;
		flex-wrap: wrap;
		justify-content: space-between;
		> .left_item {
			order: 1;
			margin-bottom: 0;
			width: 47.5%;
		}
		> .right_item {
			order: 2;
			margin-bottom: 0;
			width: 47.5%;
		}
	}
	.float_left,
	.float_left_sp_tb,
	.float_left_tb_pc,
	.float_left_tb {
		> .image_item {
			float: left;
			margin: 0 15px 15px 0;
			width: image_texts(tb, float);
		}
	}
	.float_right,
	.float_right_sp_tb,
	.float_right_tb_pc,
	.float_right_tb {
		> .image_item {
			float: right;
			margin: 0 0 15px 15px;
			width: image_texts(tb, float);
		}
	}
	// clm*
	.clm2,
	.clm2_sp_tb,
	.clm2_tb_pc,
	.clm2_tb,
	.clm3,
	.clm3_sp_tb,
	.clm3_tb_pc,
	.clm3_tb,
	.clm4,
	.clm4_sp_tb,
	.clm4_tb_pc,
	.clm4_tb,
	.clm5,
	.clm5_sp_tb,
	.clm5_tb_pc,
	.clm5_tb {
		display: flex;
		flex-wrap: wrap;
		> .clm_item {
			margin-top: clm_margin(tb);
			margin-right: clm_margin(tb);
			margin-bottom: 0;
			#{headings(3,4)},
			.caption,
			.texts,
			.text {
				padding-right: 5px;
				padding-left: 5px;
			}
		}
	}
	.clm2,
	.clm2_sp_tb,
	.clm2_tb_pc,
	.clm2_tb {
		> .clm_item {
			width: calc(50% - #{clm_margin(tb) / 2});
		}
		> .clm_item:nth-of-type(2n) {
			margin-right: 0 !important;
		}
		> .clm_item:not(:nth-of-type(n + 3)) {
			margin-top: 0;
		}
	}
	.clm3,
	.clm3_sp_tb,
	.clm3_tb_pc,
	.clm3_tb {
		> .clm_item {
			width: calc(33.3% - #{clm_margin(tb) * 2 / 3});
		}
		> .clm_item:nth-of-type(3n) {
			margin-right: 0 !important;
		}
		> .clm_item:not(:nth-of-type(n + 4)) {
			margin-top: 0;
		}
	}
	.clm4,
	.clm4_sp_tb,
	.clm4_tb_pc,
	.clm4_tb {
		> .clm_item {
			width: calc(25% - #{clm_margin(tb) * 3 / 4});
		}
		> .clm_item:nth-of-type(4n) {
			margin-right: 0 !important;
		}
		> .clm_item:not(:nth-of-type(n + 5)) {
			margin-top: 0;
		}
	}
	.clm5,
	.clm5_sp_tb,
	.clm5_tb_pc,
	.clm5_tb {
		> .clm_item {
			width: calc(20% - #{clm_margin(tb) * 4 / 5});
		}
		> .clm_item:nth-of-type(5n) {
			margin-right: 0 !important;
		}
		> .clm_item:not(:nth-of-type(n + 6)) {
			margin-top: 0;
		}
	}
	// heading in flex
	.image_texts,
	.image_texts_sp_tb,
	.image_texts_tb_pc,
	.image_texts_tb,
	.texts_image,
	.texts_image_sp_tb,
	.texts_image_tb_pc,
	.texts_image_tb,
	.left_right,
	.left_right_sp_tb,
	.left_right_tb_pc,
	.left_right_tb,
	.clm2,
	.clm2_sp_tb,
	.clm2_tb_pc,
	.clm2_tb,
	.clm3,
	.clm3_sp_tb,
	.clm3_tb_pc,
	.clm3_tb,
	.clm4,
	.clm4_sp_tb,
	.clm4_tb_pc,
	.clm4_tb,
	.clm5,
	.clm5_sp_tb,
	.clm5_tb_pc,
	.clm5_tb {
		> #{headings(3,4)}:first-child {
			width: 100%;
		}
	}
}

@include mq(pc_) {
	// image_texts left_right float
	.image_texts,
	.image_texts_tb_pc,
	.image_texts_pc {
		display: flex;
		flex-wrap: wrap;
		justify-content: space-between;
		> .image_item {
			order: 1;
			margin-bottom: 0;
			width: image_texts(pc_, image);
		}
		> .texts_item {
			order: 2;
			margin-bottom: 0;
			width: image_texts(pc_, texts);
		}
	}
	.texts_image,
	.texts_image_tb_pc,
	.texts_image_pc {
		display: flex;
		flex-wrap: wrap;
		justify-content: space-between;
		> .image_item {
			order: 2;
			margin-bottom: 0;
			width: image_texts(pc_, image);
		}
		> .texts_item {
			order: 1;
			margin-bottom: 0;
			width: image_texts(pc_, texts);
		}
	}
	.image_texts_grid,
	.image_texts_grid_tb_pc,
	.image_texts_grid_pc {
		display: grid;
		grid-template-rows: min-content 1fr;
		grid-template-columns: image_texts(pc_, image) 1fr image_texts(pc_, texts);
		> #{headings()} {
			grid-row: 1 / 2;
			grid-column: 3 / 4;
		}
		> .image_item {
			grid-row: 1 / 3;
			grid-column: 1 / 2;
			margin-bottom: 0;
		}
		> .texts_item {
			grid-row: 2 / 3;
			grid-column: 3 / 4;
			margin-bottom: 0;
		}
	}
	.texts_image_grid,
	.texts_image_grid_tb_pc,
	.texts_image_grid_pc {
		display: grid;
		grid-template-rows: min-content 1fr;
		grid-template-columns: image_texts(pc_, texts) 1fr image_texts(pc_, image);
		> #{headings()} {
			grid-row: 1 / 2;
			grid-column: 1 / 2;
		}
		> .image_item {
			grid-row: 1 / 3;
			grid-column: 3 / 4;
			margin-bottom: 0;
		}
		> .texts_item {
			grid-row: 2 / 3;
			grid-column: 1 / 2;
			margin-bottom: 0;
		}
	}
	.left_right,
	.left_right_tb_pc,
	.left_right_pc {
		display: flex;
		flex-wrap: wrap;
		justify-content: space-between;
		> .left_item {
			order: 1;
			margin-bottom: 0;
			width: 47.5%;
		}
		> .right_item {
			order: 2;
			margin-bottom: 0;
			width: 47.5%;
		}
	}
	.float_left,
	.float_left_tb_pc,
	.float_left_pc {
		> .image_item {
			float: left;
			margin: 0 20px 20px 0;
			width: image_texts(pc_, float);
		}
	}
	.float_right,
	.float_right_tb_pc,
	.float_right_pc {
		> .image_item {
			float: right;
			margin: 0 0 20px 20px;
			width: image_texts(pc_, float);
		}
	}
	// clm*
	.clm2,
	.clm2_tb_pc,
	.clm2_pc,
	.clm3,
	.clm3_tb_pc,
	.clm3_pc,
	.clm4,
	.clm4_tb_pc,
	.clm4_pc,
	.clm5,
	.clm5_tb_pc,
	.clm5_pc {
		display: flex;
		flex-wrap: wrap;
		> .clm_item {
			margin-top: clm_margin(pc_);
			margin-right: clm_margin(pc_);
			margin-bottom: 0;
			#{headings()},
			.caption,
			.texts,
			.text {
				padding-right: 5px;
				padding-left: 5px;
			}
		}
	}
	.clm2,
	.clm2_tb_pc,
	.clm2_pc {
		> .clm_item {
			width: calc(50% - #{clm_margin(pc_)} / 2);
		}
		> .clm_item:nth-of-type(2n) {
			margin-right: 0 !important;
		}
		> .clm_item:not(:nth-of-type(n + 3)) {
			margin-top: 0;
		}
	}
	.clm3,
	.clm3_tb_pc,
	.clm3_pc {
		> .clm_item {
			width: calc(33.3% - #{clm_margin(pc_) * 2 / 3});
		}
		> .clm_item:nth-of-type(3n) {
			margin-right: 0 !important;
		}
		> .clm_item:not(:nth-of-type(n + 4)) {
			margin-top: 0;
		}
	}
	.clm4,
	.clm4_tb_pc,
	.clm4_pc {
		> .clm_item {
			width: calc(25% - #{clm_margin(pc_) * 3 / 4});
		}
		> .clm_item:nth-of-type(4n) {
			margin-right: 0 !important;
		}
		> .clm_item:not(:nth-of-type(n + 5)) {
			margin-top: 0;
		}
	}
	.clm5,
	.clm5_tb_pc,
	.clm5_pc {
		> .clm_item {
			width: calc(20% - #{clm_margin(pc_) * 4 / 5});
		}
		> .clm_item:nth-of-type(5n) {
			margin-right: 0 !important;
		}
		> .clm_item:not(:nth-of-type(n + 6)) {
			margin-top: 0;
		}
	}
	// heading in flex
	.image_texts,
	.image_texts_tb_pc,
	.image_texts_pc,
	.texts_image,
	.texts_image_tb_pc,
	.texts_image_pc,
	.left_right,
	.left_right_tb_pc,
	.left_right_pc,
	.clm2,
	.clm2_tb_pc,
	.clm2_pc,
	.clm3,
	.clm3_tb_pc,
	.clm3_pc,
	.clm4,
	.clm4_tb_pc,
	.clm4_pc,
	.clm5,
	.clm5_tb_pc,
	.clm5_pc {
		> #{headings(3,4)}:first-child {
			width: 100%;
		}
	}
}

/* swiper */
// 現在導入中につき使用不可

.swiper-container {
	padding-bottom: 40px;
	.swiper-wrapper {
		.swiper-slide {
		}
	}
	.swiper-controler {
		position: absolute;
		bottom: 0;
		display: flex;
		flex-wrap: wrap;
		align-items: center;
		justify-content: center;
		width: 100%;
		height: 40px;
		.swiper-button-prev,
		.swiper-button-next {
			top: 0;
			display: block;
			margin-top: 0;
			width: 40px;
			height: 40px;
			font-size: 20px;
			color: color(button, base);
			cursor: pointer;
			&::after {
				content: '';
			}
		}
		.swiper-button-prev {
			@include icomoon('self', icom(angle-left), 40px);
			left: 0;
		}
		.swiper-button-next {
			@include icomoon('self', icom(angle-right), 40px);
			right: 0;
		}
		.swiper-pagination {
			position: relative;
			display: flex;
			align-items: center;
			justify-content: space-around;
			margin-top: 0;
			height: 30px;
			> span {
				margin: 0 5px;
				background-color: color(button, base);
			}
		}
	}
}

/*--------------------------------------
	table
---------------------------------------*/

/* table common */

table,
.table_type {
	width: 100%;
	caption {
		display: none;
	}
	thead,
	tbody,
	& {
		tr {
			th {
				padding: 8px;
				line-height: 1.4;
				vertical-align: top;
				@include mq(_sp) {
					font-size: 1.3rem;
				}
				@include mq(tb_) {
					padding: 15px 10px;
				}
			}
			td {
				padding: 8px;
				line-height: 1.4;
				vertical-align: top;
				@include mq(tb_) {
					padding: 15px 10px;
				}
				*,
				&::before {
					line-height: 1.4;
					@include mq(_sp) {
						font-size: 1.3rem;
					}
				}
				> *:last-child {
					margin-bottom: 0;
				}
			}
		}
	}
	tfoot {
		tr {
			td {
				padding: 5px 0 0;
				text-align: right;
				font-size: 1.1rem;
			}
		}
	}
	& + * {
		margin-top: 8px;
	}
}

.table_type {
	display: table;
	.thead {
		display: table-header-group;
	}
	.tbody {
		display: table-row-group;
	}
	.tr {
		display: table-row;
	}
	.th,
	.td {
		display: table-cell;
	}
}

/* center right */

table,
.table_type {
	caption.left,
	caption.right,
	caption.center {
		display: table-caption;
		margin-bottom: 8px;
	}
	caption.left {
		text-align: left;
	}
	caption.right,
	th.right,
	td.right {
		text-align: right;
	}
	caption.center,
	th.center,
	td.center {
		text-align: center;
	}
	th.middle,
	td.middle {
		vertical-align: middle;
	}
	th.nowrap,
	td.nowrap {
		white-space: nowrap;
	}
	@include mq(_sp) {
		th.right_sp,
		td.right_sp {
			text-align: right;
		}
		th.center_sp,
		td.center_sp {
			text-align: center;
		}
		th.middle_sp,
		td.middle_sp {
			vertical-align: middle;
		}
		th.nowrap_sp,
		td.nowrap_sp {
			white-space: nowrap;
		}
	}
	@include mq(tb) {
		th.right_tb,
		td.right_tb {
			text-align: right;
		}
		th.center_tb,
		td.center_tb {
			text-align: center;
		}
		th.middle_tb,
		td.middle_tb {
			vertical-align: middle;
		}
		th.nowrap_tb,
		td.nowrap_tb {
			white-space: nowrap;
		}
	}
	@include mq(pc_) {
		th.right_pc,
		td.right_pc {
			text-align: right;
		}
		th.center_pc,
		td.center_pc {
			text-align: center;
		}
		th.middle_pc,
		td.middle_pc {
			vertical-align: middle;
		}
		th.nowrap_pc,
		td.nowrap_pc {
			white-space: nowrap;
		}
	}
}

/* table style */

table,
.table_type {
	// table_style_def
	&.table {
		thead,
		tbody,
		& {
			// edit--
			background: white;
			// --edit
			tr {
				th {
					border: 1px solid color(border, base);
					// must--
					background: rgba(#ddd, 0.2);
					// --must
				}
				td {
					border: 1px solid color(border, base);
				}
			}
		}
	}

	// table_line
	&.table_line {
		// edit--
		background: white;
		// --edit
		thead,
		tbody,
		& {
			tr {
				th {
					border-top: 1px solid color(border, base);
					border-bottom: 1px solid color(border, base);
				}
				td {
					border-top: 1px solid color(border, base);
					border-bottom: 1px solid color(border, base);
				}
			}
		}
	}
	@include mq(_sp) {
		// table_block_sp
		&.table_block_sp {
			// edit--
			background-color: white;
			// --edit
			thead {
				display: none;
			}
			tbody,
			& {
				border: 1px solid color(border, base);
				tr {
					display: block;
					padding: 10px;
					th {
						display: block;
						margin-bottom: 10px;
						padding: 0;
						border: none;
						background-color: transparent;
						font-weight: bold;
						color: black;
					}
					td {
						display: block;
						padding: 0 0 0 10px;
						border: none;
						background-color: transparent;
					}
					td:not(:last-child) {
						margin-bottom: 5px;
					}
				}
				tr:not(:first-child) {
					border-top: 1px solid color(border, base);
				}
			}
		}
		// add_thead
		&.table_block_sp.add_thead {
			tbody {
				tr {
					th {
					}
					td {
						display: flex;
						&::before {
							content: attr(data-title);
							width: 60px;
						}
						> *:not(:last-child) {
							margin-right: 10px;
						}
					}
				}
			}
		}
	}
}
/* scroll_table */
.scroll_wrap {
	@include mq(_tb) {
		overflow: auto;
		white-space: nowrap;
		&::-webkit-scrollbar {
			height: 5px;
		}
		&::-webkit-scrollbar-track {
			background: #f1f1f1;
		}
		&::-webkit-scrollbar-thumb {
			background: #bcbcbc;
		}
		table {
			width: 100%;
		}
	}
}

/*--------------------------------------
	form : overwrite
---------------------------------------*/

/* form_set */

form {
	// form_set01
	&.form_set01 {
		.form_input_set {
			.form_fieldset {
				.form_legend {
					legend {
					}
				}
				.form_input {
					p {
					}
				}
			}
		}
	}
	// form_set02
	&.form_set02 {
		.form_input_set {
			.form_fieldset {
				.form_legend {
					legend {
					}
				}
				.form_input {
					p {
					}
				}
			}
		}
	}
}

/*--------------------------------------
	entry_wrap
---------------------------------------*/

.entry_wrap {
	h2 {
		@extend .heading02;
	}
	h3 {
		@extend .heading03;
	}
	h4 {
		@extend .heading04;
	}
	h5 {
		@extend .heading05;
	}
	ul {
		//@extend %ul;
	}
	h2:not(:first-child) {
		margin-top: 20px;
		margin-bottom: 20px;
	}
	h3:not(:first-child) {
		margin-top: 15px;
	}
	h4:not(:first-child) {
		margin-top: 10px;
	}
	h5:not(:first-child) {
		margin-top: 10px;
	}
	p {
		@extend .text;
	}
	table {
		@extend .table;
	}
	img {
		float: none !important;
		margin-bottom: 6px;
		max-width: 100%;
	}
	a {
		word-break: break-all;
		word-wrap: break-word;
	}

	// edit--
	h2:not(:first-child) {
		@include mq(tb_) {
			margin-top: 40px;
			margin-bottom: 40px;
		}
		@include mq(pc_) {
			margin-top: 60px;
			margin-bottom: 60px;
		}
	}
	h3:not(:first-child) {
		@include mq(tb_) {
			margin-top: 25px;
		}
	}
	h4:not(:first-child) {
		@include mq(tb_) {
			margin-top: 10px;
		}
	}
	h5:not(:first-child) {
		@include mq(tb_) {
			margin-top: 10px;
		}
	}
	// --edit
}
.main_area {
	.title,
	.heading02,
	.entry_wrap h2 {
		text-align: left;
	}
}
